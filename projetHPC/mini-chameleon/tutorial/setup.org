#+TITLE: Getting started
#+AUTHOR: Emmanuel Agullo and Mathieu Faverge
#+INCLUDE: https://gitlab.inria.fr/elementaryx/emacs-elementaryx-ox-html-themes/-/raw/main/org/theme-bigblow-less.setup
#+PROPERTY: header-args:bash :eval no :exports both

* Resources

label:ressources

** This project

You can [[https://solverstack.gitlabpages.inria.fr/mini-examples/mini-chameleon/][browse]] or visit the [[https://gitlab.inria.fr/solverstack/mini-examples/mini-chameleon/][source]] of the project.

Note: This project was initiated in the context of the IS321 of the
=enseirb-matmeca= =cisd= option, for which we provide an [[./setup-cisd.org][extra collaborative set
up]].

** Code

The reference code is available in the [[https://gitlab.inria.fr/solverstack/mini-examples/mini-chameleon/][source]] of this project:
[[https://gitlab.inria.fr/solverstack/mini-examples/mini-chameleon/]]. It may be
cloned and forked. The clone set up must be performed with the
~--recurse-submodules~ option. The clone may be performed either via ~https~ or
~ssh~.

- clone via ~https~:
#+begin_src bash
git clone --recurse-submodules https://gitlab.inria.fr/solverstack/mini-examples/mini-chameleon.git
#+end_src

- clone via ~ssh~:
#+begin_src bash
git clone --recurse-submodules git@gitlab.inria.fr:solverstack/mini-examples/mini-chameleon.git
#+end_src

Other options are possible, such as cloning from a fork, as in the case of [[./setup-cisd.org][cisd
option at enseirb-matmeca]].

* Hardware environment

The project is not entitled with any particular hardware environment
but we provide specific instructions for the [[https://www.plafrim.fr][plafrim]] machine.

* Software environment
  :PROPERTIES:
  :ID:       a824dae5-55ca-4a27-a17a-32b11b48ec55
  :END:

label:env

We propose three software environments:
- [[./setup-plafrim.org][plafrim modules]]:
  - provided on =plafrim= only;
  - out-of-the-box;
- [[./setup-guix.org][guix set up]]:
  - possible on any machine having [[https://guix.gnu.org/][guix]] installed, including =plafrim= (see [[https://plafrim-users.gitlabpages.inria.fr/doc/#guix][plafrim reference]]);
  - master your environment;
- [[./setup-guixmodules.org][plafrim guix modules]]: for those who want to use ~modules~ but have
  them generated with ~guix~.

You can choose the environment you want.

* Mise en place

** Gestion des ressources avec =slurm= (mono-noeud)

   Voici un petit rappel de quelques commandes =slurm= utiles pour gérer les
   ressources =plafrim-formation= auxquelles vous voulez accéder :

   #+begin_src bash :eval no
     sinfo
     salloc -p <partition> -N <number of nodes>
     ssh <node id>
     sbatch <batch script>
     squeue -u <login name>
     scontrol show jobid <job id>
     scancel <job id>
   #+end_src

   Dans ce TP, nous n'utiliserons qu'un seul noeud homogène, de type ~miriel~:

   #+begin_src
   salloc -C miriel -N 1
   ssh <node id>
   #+end_src

   Tant qu'il s'agit de développer le code, pour ne pas trop saturer
   l'utilisation des ressources, merci de ne pas utiliser l'option
   ~--exclusive~, et de garder celle-ci pour vos réservations dédiées à des
   études de performance (pour lesquelles vous préférerez sans doute utiliser
   ~sbatch~).

   Merci d'effectuer l'ensemble de votre travail (édition, compilation, tests)
   depuis un noeud de calcul pour éviter de surcharger la frontale.

** Construction de la bibliothèque et des testeurs

Once the proper software environment has been set up (with either [[./setup-guix.org][guix]] or
[[./setup-plafrim.org][environment modules]]), you can build the project:

   #+begin_src bash :eval no
     cd ./mini-chameleon
     mkdir -p build/default
     cmake . -B build/default -DENABLE_MPI=ON -DENABLE_STARPU=ON -DENABLE_MIPP=ON
     cmake --build build/default
   #+end_src

   Les options =cmake= ~-DENABLE_MPI=ON -DENABLE_STARPU=ON~ sont facultatives
   pour le moment et peuvent être ignorés tant que l'on reste en séquentiel ou
   multi-threadé.

** How about auto-completion for IDEs

You may [[./setup-ide.org][visit this page]] if you are interested in auto-completion.
